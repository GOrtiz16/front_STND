name: node
on:
  workflow_dispatch:

env:
  NAMESPACE: test
  CLUSTER_NAME: az-eastus-bsp-dev-newobw-aks
  CLUSTER_RESOURCE_GROUP: AZ-EASTUS-BSP-DEV-NEWOBW-ALL-RG

jobs:
  run:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash

    steps:

      # - name: Descargar Repositorio
      #   uses: actions/checkout@v4
        
      # - name: Cache Dependencies
      #   uses: actions/cache@v4
      #   id: cache-node-modules
      #   with:
      #     path: 'app/node_modules'
      #     key: ${{ runner.os }}-node_modules-${{ hashFiles('app/package*.json') }}-${{ hashFiles('.github/workflows/deploy.yaml') }}

      # - name: Use Node.js 18.x
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 18.x

      # - name: Install dependencies
      #   if: steps.cache-node-modules.outputs.cache-hit != 'true'
      #   run: npm install
      #   working-directory: ./app

      # - name: Build
      #   run: npm run build
      #   working-directory: ./app

      # - uses: azure/docker-login@v1
      #   with:
      #     login-server: ${{ vars.REGISTRY_SERVER }}
      #     username: ${{ secrets.REGISTRY_USERNAME }}
      #     password: ${{ secrets.REGISTRY_PASSWORD }}
      
      # - name: Extraer nombre de repositorio
      #   id: repo-name
      #   run: |
      #     SERVICE=$(echo ${{ github.repository }} | cut -d'/' -f2 | cut -d'-' -f3)
      #     echo "::set-output name=repo::$SERVICE"

      # - name: Build and push Docker image
      #   run: |
      #     docker build . -t ${{ vars.REGISTRY_SERVER }}/${{ steps.repo-name.outputs.repo }}:latest
      #     docker push ${{ vars.REGISTRY_SERVER }}/${{ steps.repo-name.outputs.repo }}:latest

      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}


      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -